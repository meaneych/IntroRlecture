install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplo2)
getwd()
install.packages("forecase")
install.packages("forecast")
?install.packages
X <- read.spss("/Volumes/WININSTALL/InterventionAnalysis/Data/Medicine_Data.sav", to.data.frame=TRUE)
X <- subset(X, X$Time!="NA")
XX <- ts(X$Total_DOT_Medicine, start=c(2010,1), end=c(2013,9), frequency=12)
library(foreign)
X <- read.spss("/Volumes/WININSTALL/InterventionAnalysis/Data/Medicine_Data.sav", to.data.frame=TRUE)
X <- subset(X, X$Time!="NA")
XX <- ts(X$Total_DOT_Medicine, start=c(2010,1), end=c(2013,9), frequency=12)
XX
plot(XX)
plot(XX,cex.lab=0.5)
plot(XX,cex=0.5)
plot(XX,cex=5)
plot(X$Time,X$Total_DOT_Medicine,type="l", xlab="Time", ylab="Bacterial Count", main="Medicine Data", xaxt="n", ylim=c(0,1200))
axis(1, at=seq(1,45,by=1), las=1, cex.axis=0.5)
abline(v=27,col="red")
plot(X$Time,X$Total_DOT_Medicine,type="l", xlab="Time", ylab="Bacterial Count", main="Medicine Data", xaxt="n", ylim=c(0,1200))
names(X)
plot(X$Time,X$Total_DOT_Medicine,type="l", xlab="Time", ylab="Bacterial Count", main="Medicine Data", ylim=c(0,1200))
plot(X$Time,X$Total_DOT_Medicine)
X
plot(Time,Total_DOT_Medicine,data=X)
plot(X$Time)
plot(X$Time,X$Total_DOT_Medicine)
plot(X$Time,X$Total_DOT_Medicine,type="l")
plot(X$Time,X$Total_DOT_Medicine,type="l", xlab="Time", ylab="Bacterial Count", main="Medicine Data", xaxt="n", ylim=c(0,1200))
axis(1, at=seq(1,45,by=1), las=1, cex.axis=0.5)
abline(v=27,col="red")
axis(1, at=seq(1,45,by=1), las=1, cex.axis=0.5)
axis(1, at=seq(1,45,by=1), las=1, cex.axis=0.1)
plot(X$Time,X$Total_DOT_Medicine,type="l", xlab="Time", ylab="Bacterial Count", main="Medicine Data", xaxt="n", ylim=c(0,1200))
axis(1, at=seq(1,45,by=1), las=1, cex.axis=0.1)
?seq.Date
?axis
summary(XX$Total_DOT_Medicine)
summary(X$Total_DOT_Medicine)
plot(XX, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n")
axis(1, at=seq(from=as.Date("2010/1/1"), to=as.Date("2013/10/1"), by = "month"), las=2, cex.axis=0.5)
axis(2,  at=seq(from=150, to=600, by=50), las=1, cex.lab=0.5)
plot(XX, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n")
axis(1, at=seq(from=as.Date("2010/1/1"), to=as.Date("2013/10/1"), by = "month"), las=2, cex.axis=0.5)
axis(2,  at=seq(from=150, to=600, by=50), las=1, cex.lab=0.4)
plot(XX, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n")
axis(1, at=seq(from=as.Date("2010/1/1"), to=as.Date("2013/10/1"), by = "month"), las=2, cex.axis=0.5)
axis(2,  at=seq(from=150, to=600, by=50), las=1, cex.axis=0.4)
seq(from=as.Date("2010/1/1"), to=as.Date("2013/10/1"), by = "month")
length(seq(from=as.Date("2010/1/1"), to=as.Date("2013/10/1"), by = "month"))
?axis
axis(1, at=1:45, labels=seq(from=as.Date("2010/1/1"), to=as.Date("2013/10/1"), by = "month"), las=2, cex.axis=0.5)
axis(1, at=1:45, labels=seq(from=as.Date("2010/1/1"), to=as.Date("2013/9/1"), by = "month"), las=2, cex.axis=0.5)
plot(X$Time, X$DOT_Total_Medicine, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n")
axis(1, at=1:45, labels=seq(from=as.Date("2010/1/1"), to=as.Date("2013/9/1"), by = "month"), las=2, cex.axis=0.5)
axis(2,  at=seq(from=150, to=600, by=50), las=1, cex.axis=0.5)
plot(X$Time, X$DOT_Total_Medicine, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n")
names(X)
plot(X$Time, X$Total_DOT_Medicine, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n")
plot(X$Time, X$Total_DOT_Medicine, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n",type="l")
plot(X$Time, X$Total_DOT_Medicine, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n",type="l")
axis(1, at=1:45, labels=seq(from=as.Date("2010/1/1"), to=as.Date("2013/9/1"), by = "month"), las=2, cex.axis=0.5)
axis(2,  at=seq(from=150, to=600, by=50), las=1, cex.axis=0.5)
plot(X$Time, X$Total_DOT_Medicine, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n",type="l")
axis(1, at=1:45, labels=seq(from=as.Date("2010/1/1"), to=as.Date("2013/9/1"), by = "month"), las=2, cex.axis=0.5)
"month"), las=2, cex.axis=0.5)
axis(2,  at=seq(from=150, to=600, by=50), las=1, cex.axis=0.5)
seq(from=1,to=45,by=12)
plot(X$Time, X$Total_DOT_Medicine, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n",type="l")
axis(1, at=seq(from=1, to=45, by=6), labels=c("2010-Jan","2010-Jul","2011-Jan","2011-Jul","2012-Jan","2012-Jul","2013-Jan","2013-Jul"), las=2, cex.axis=0.5)
axis(2,  at=seq(from=150, to=600, by=50), las=1, cex.axis=0.5)
plot(X$Time, X$Total_DOT_Medicine, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n",type="l")
axis(1, at=seq(from=1, to=45, by=6), labels=c("2010-Jan","2010-Jul","2011-Jan","2011-Jul","2012-Jan","2012-Jul","2013-Jan","2013-Jul"), las=2, cex.axis=0.5)
axis(2,  at=seq(from=150, to=600, by=50), las=1, cex.axis=0.5)
abline(v=27,col="red",lwd=2)
plot(X$Time, X$Total_DOT_Medicine, ylab="Bacterial Count", xlab="Time", main="", xaxt="n",yaxt="n",type="l", cex.lab=0.5)
axis(1, at=seq(from=1, to=45, by=6), labels=c("2010-Jan","2010-Jul","2011-Jan","2011-Jul","2012-Jan","2012-Jul","2013-Jan","2013-Jul"), las=2, cex.axis=0.5)
axis(2,  at=seq(from=150, to=600, by=50), las=1, cex.axis=0.5)
abline(v=27,col="red",lwd=2)
c(1,1,1,1)
class(c(1,1,1,1)
)
X <- read.spss("C:/Users/meaneych/Desktop/InterventionAnalysis/Data/Medicine_Data.sav", to.data.frame=TRUE)
library(foreign)
X <- read.spss("C:/Users/meaneych/Desktop/InterventionAnalysis/Data/Medicine_Data.sav", to.data.frame=TRUE)
??glmmADMB
install.packages("glmmADMB")
??boot
library(slidify)
library(slidifyLibraries)
?publish
library(pander)
slidify("index.Rmd")
browseURL("index.html")
par(oma=rep(3, 4), bg="grey80")
plot(c(0, 1), c(0, 1), type="n", ann=FALSE, axes=FALSE)
box("outer", col="grey")
# set clipping to figure region
par(xpd=TRUE)
# deliberately draw a stupidly large rectangle
rect(-1, -1, 2, 2, col="grey90")
box("figure")
# set clipping back to plot region
par(xpd=FALSE)
# deliberately draw a stupidly large rectangle
rect(-1, -1, 2, 2, col="grey80")
box("plot", lty="dashed")
text(.5, .5, "Plot Region")
mtext("Figure Region", side=3, line=2)
for (i in 1:4)
mtext(paste("Outer margin", i), side=i, line=1, outer=TRUE)
par(oma=rep(3, 4), bg="grey80")
plot(c(0, 1), c(0, 1), type="n", ann=FALSE, axes=FALSE)
box("outer", col="grey")
# set clipping to figure region
par(xpd=TRUE)
# deliberately draw a stupidly large rectangle
rect(-1, -1, 2, 2, col="grey90")
box("figure")
?box
# set clipping back to plot region
par(xpd=FALSE)
# deliberately draw a stupidly large rectangle
rect(-1, -1, 2, 2, col="grey80")
box("plot", lty="dashed")
text(.5, .5, "Plot Region")
mtext("Figure Region", side=3, line=2)
for (i in 1:4)
mtext(paste("Outer margin", i), side=i, line=1, outer=TRUE)
plot.newclass <-
function(x, y=NULL,
main="", sub="",
xlim=NULL, ylim=NULL,
axes=TRUE, ann=par("ann"),
col=par("col"),
...) {
xy <- xy.coords(x, y)
if (is.null(xlim))
xlim <- range(xy$x[is.finite(xy$x)])
if (is.null(ylim))
ylim <- range(xy$y[is.finite(xy$y)])
opar <- par(no.readonly=TRUE)
on.exit(par(opar))
plot.new()
plot.window(xlim, ylim, ...)
points(xy$x, xy$y, col=col, ...)
if (axes) {
axis(1)
axis(2)
box()
}
if (ann)
title(main=main, sub=sub,
xlab=xy$xlab, ylab=xy$ylab, ...)
}
example(mtext)
example(par)
plot(1:10,ann=FALSE,type=”n”,xaxt=”n”,yaxt=”n”)
for(j in 1:4) for(i in 0:10) mtext(as.character(i),side=j,line=i)
plot(1:10,ann=FALSE,type="n",xaxt="n",yaxt="n")
par(oma=rep(3, 4), bg="grey80")
plot(c(0, 1), c(0, 1), type="n", ann=FALSE, axes=FALSE)
# set clipping to figure region
par(xpd=TRUE)
# deliberately draw a stupidly large rectangle
rect(-1, -1, 2, 2, col="grey90")
box("figure")
# set clipping back to plot region
par(xpd=FALSE)
# deliberately draw a stupidly large rectangle
rect(-1, -1, 2, 2, col="grey80")
box("plot", lty="dashed")
text(.5, .5, "Plot Region")
mtext("Figure Region", side=3, line=2)
for (i in 1:4)
mtext(paste("Outer margin", i), side=i, line=1, outer=TRUE)
par(xaxs="i", yaxs="i", xpd=FALSE)
plot(c(0, 1), c(0, 1), type="n", ann=FALSE, axes=FALSE)
rect(0, 0, 1, 1, col="light grey", border="grey")
axis(1, at=c(0, 1), c("", ""))
mtext("Min x value", side=1, adj=0, line=1)
mtext("Max x value", side=1, adj=1, line=1)
axis(2, at=c(0, 1), c("", ""))
mtext("Min y value", side=2, adj=0, line=1)
mtext("Max y value", side=2, adj=1, line=1)
lines(c(.6, .6, 0), c(0, .6, .6), lty="dashed")
text(.6, .6, expression(paste("The location ",
group("(",list(x[i], y[i]),")"))), pos=3)
points(.6, .6, pch=16)
axis(1, at=.6, "")
mtext(expression(x[i]), side=1, at=.6, line=.7)
axis(2, at=.6, "")
mtext(expression(y[i]), side=2, at=.6, line=.7)
?install.packages
suppressPackageStartupMessages(library(XLConnect))
browseURL("index.html")
setwd("/Users/chris/Desktop/Rlecture/mydeck/")
browseURL("index.html")
## Install Packages
install.packages("knitr")
install.packages("markdown")
# Set working directory
setwd("/Users/chris/Desktop/Rlecture/mydeck/OtherFiles/")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("OnePageR.Rmd")
markdownToHTML('My_Analysis.md', 'My_Analysis.html', options=c("use_xhml"))
system("pandoc -s My_Analysis.html -o My_Analysis.pdf")
system(paste0("pandoc -s ", paste0(filen,".md"), " -t latex -o ", paste0(filen,".pdf"), " --highlight-style=tango  -S"))
system(paste0("pandoc -s ", paste0(OnePageR,".md"), " -t latex -o ", paste0(OnePageR,".pdf"), " --highlight-style=tango  -S"))
knit("OnePageR.Rmd")
system(paste0("pandoc -s ", paste0(OnePageR,".md"), " -t latex -o ", paste0(OnePageR,".pdf"), " --highlight-style=tango  -S"))
render("OnePageR.Rmd")
?render
library(rmarkdown)
install.packages("rmarkdown")
library(rmarkdown)
??render
renderMarkdown("OnePageR.Rmd")
install.packages("knitr")
install.packages("markdown")
install.packages("knitr")
install.packages("markdown")
# Set working directory
setwd("/Users/chris/Desktop/Rlecture/mydeck/OtherFiles/")
# Load packages
require(knitr)
require(markdown)
knit2pdf("OnePageR.Rnw")
knit2pdf("OnePageR.Rnw")
